server:
  port: 9001
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

polar:
  greeting: Welcome to the local project


spring:
  sql:
    init:
      mode: always
  datasource:
    username: zxzz45
    password: 1234
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000    # 풀에서 연결 객체를 얻기 위해 기다려야 하는 최대 시간
      maximum-pool-size: 5        # 히카리CP가 풀에 최대한으로 유지할 수 있는 연결 객체의 수
  application:
    name: catalog-service
  config:
    # 가능하면 컨피그 서버에서 설정 데이터를 가져온다.
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://config-service:8888
      # 설정 서버에 연결될 때 까지 기다리는 시간(밀리초)
      request-connect-timeout: 5000
      # 설정 서버에서 설정 데이터를 읽을 때까지 기다리는 시간(밀리초)
      request-read-timeout: 5000
      # 설정 서버 연결 실패를 치명적 오류로 인식
      fail-fast: true
      retry:
        max-attempts: 6           # 최대 시도 횟수
        initial-interval: 1000    # 최초 재시도 지연 시간
        max-interval: 2000        # 재시도 지연 최대 시간
        multiplier: 1.1           # 지연 시간 계산 승수

management:
  endpoints:
    web:
      exposure:
        include: refresh